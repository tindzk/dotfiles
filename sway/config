set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:DejaVu Sans Mono 8

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# kill focused window
bindsym $mod+q kill

# switch workspaces
bindsym $mod+comma    workspace prev_on_output
bindsym $mod+period   workspace next_on_output
bindsym $mod+o        exec ~/dotfiles/sway/open-workspace.py
bindsym $mod+shift+o  exec ~/dotfiles/sway/open-workspace.py move

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

bindsym $mod+Tab workspace back_and_forth

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+backslash split h

# split in vertical orientation
bindsym $mod+minus split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+t layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart sway inplace (preserves your layout/session, can be used to upgrade sway)
bindsym $mod+Shift+r restart

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize shrink height 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left  resize grow width 10 px or 10 ppt
        bindsym Right resize shrink width 10 px or 10 ppt
        bindsym Up    resize grow height 10 px or 10 ppt
        bindsym Down  resize shrink height 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# Run a program
bindsym $mod+d exec bemenu-run

# Start a terminal
bindsym $mod+Return exec kitty

# Pulse Audio controls
bindsym F1 exec pactl set-sink-mute   @DEFAULT_SINK@ toggle
bindsym F2 exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym F3 exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioMute        exec pactl set-sink-mute   @DEFAULT_SINK@ toggle
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%

# Screen brightness controls
bindsym XF86MonBrightnessDown exec light -U 1
bindsym XF86MonBrightnessUp   exec light -A 1

# Lock screen
bindsym $mod+x exec lock

# Lock screen
# TODO XF86Lock is not mapped
# bindsym XF86Lock exec slock

# After 400 seconds, turn off all outputs (and turn them back on when you wiggle the mouse)
# After 500 seconds of inactivity, lock screen
# Lock screen before system goes to sleep
exec swayidle \
    timeout 400 'swaymsg "output * dpms off"' \
       resume 'swaymsg "output * dpms on"' \
    timeout 500 lock \
    before-sleep lock

exec waybar
exec redshift
exec ~/dotfiles/sway/workspace-names.py

output  DP-1 scale 1 position 1920,0
output  DP-1 bg ~/Wallpapers/C27ADE8D23.jpg fill

output eDP-1 scale 2 position 0,0
output eDP-1 bg ~/Wallpapers/1IK5W8T7GQ.jpg fill

input * xkb_layout  annepro,de
input * xkb_variant annepro
input * xkb_options grp:alt_shift_toggle
